{"version":3,"sources":["serviceWorker.js","constants.ts","game.ts","components/Cell.tsx","components/Dice.tsx","components/Piece.tsx","components/Board.tsx","App.tsx","index.js"],"names":["Boolean","window","location","hostname","match","Colors","BoardLayout4","boardSize","pieceSize","players","cells","INITIAL_STATE","pieces","playerId","id","position","name","color","getCurrentPlayer","G","ctx","player","find","p","currentPlayer","undefined","Error","getPlayerById","getNextPosition","piece","dieRoll","offset","relDest","SeisGame","setup","moves","rollDie","value","INVALID_MOVE","random","D6","movePiece","pieceId","getPieceById","nextPos","events","endTurn","map","turn","Cell","x","y","h","highlight","children","style","top","left","height","width","borderWidth","className","Dice","onRoll","text","String","fromCodePoint","onClick","e","Piece","enabled","onSelect","onActivate","onDeactivate","noop","onMouseEnter","onMouseLeave","Board","useState","activePiece","setActivePiece","useWindowSize","innerHeight","innerWidth","size","Math","min","scale","validMoves","filter","pos","indexOf","getValidMoves","activeMove","m","selectPiece","console","log","activatePiece","deactivatePiece","length","i","floor","key","some","GameClient","Client","game","Game","board","App","debug","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ee3481fd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const Colors = [\n  \"red\",\n  \"blue\",\n  \"yellow\",\n  \"green\",\n];\n\n\ninterface Coord {\n  x: number,\n  y: number,\n}\n\ntype ICell = number[];\n\nexport interface IBoardLayout {\n  boardSize: number,\n  pieceSize: number,\n  players: number,\n  cells: ICell[],\n}\n\nexport const BoardLayout4: IBoardLayout = {\n  boardSize: 410,\n  pieceSize: 20,\n  players: 4,\n  cells: [\n    // 0-11, common cells, position 0\n    [10, 220],\n    [40, 220],\n    [70, 220],\n    [100, 220],\n    [130, 220],\n    [160, 220],\n    [160, 250],\n    [160, 280],\n    [160, 310],\n    [160, 340],\n    [160, 370],\n    [190, 370],\n\n    // 12-23, common cells, position 1\n    [220, 370],\n    [220, 340],\n    [220, 310],\n    [220, 280],\n    [220, 250],\n    [220, 220],\n    [250, 220],\n    [280, 220],\n    [310, 220],\n    [340, 220],\n    [370, 220],\n    [370, 190],\n\n    // 24-35, common cells, position 2\n    [370, 160],\n    [340, 160],\n    [310, 160],\n    [280, 160],\n    [250, 160],\n    [220, 160],\n    [220, 130],\n    [220, 100],\n    [220, 70],\n    [220, 40],\n    [220, 10],\n    [190, 10],\n\n    // 36-47, common cell, position 3\n    [160, 10],\n    [160, 40],\n    [160, 70],\n    [160, 100],\n    [160, 130],\n    [160, 160],\n    [130, 160],\n    [100, 160],\n    [70, 160],\n    [40, 160],\n    [10, 160],\n    [10, 190],\n\n    // 48-51, home, position 0\n    [40, 190],\n    [70, 190],\n    [100, 190],\n    [130, 190],\n\n    // 52-55, home, position 1\n    [190, 340],\n    [190, 310],\n    [190, 280],\n    [190, 250],\n\n    // 56-59, home, position 2\n    [340, 190],\n    [310, 190],\n    [280, 190],\n    [250, 190],\n\n    // 60-63, home, position 3\n    [190, 40],\n    [190, 70],\n    [190, 100],\n    [190, 130],\n\n    // 64-67, start, position 0\n    [10, 310],\n    [30, 330],\n    [50, 350],\n    [70, 370],\n\n    // 68-71, start, position 1\n    [310, 370],\n    [330, 350],\n    [350, 330],\n    [370, 310],\n\n    // 72-75, start, position 2\n    [310, 10],\n    [330, 30],\n    [350, 50],\n    [370, 70],\n\n    // 76-79, start, position 3\n    [10, 70],\n    [30, 50],\n    [50, 30],\n    [70, 10],\n  ],\n};\n","import { INVALID_MOVE } from 'boardgame.io/core';\nimport { Game, Ctx } from 'boardgame.io';\n\nexport interface IPiece {\n  id: number;\n  playerId: string;\n  position: number;\n}\n\nexport interface IPlayer {\n  id: string;\n  position: number;\n  name: string;\n  color: string;\n}\n\nexport interface IG {\n  pieces: IPiece[],\n  players: IPlayer[],\n  dieRoll?: number,\n}\n\nconst INITIAL_STATE: IG = {\n  pieces: [\n    {playerId: \"0\", id: 0, position: 64},\n    {playerId: \"0\", id: 1, position: 65},\n    {playerId: \"0\", id: 2, position: 66},\n    {playerId: \"0\", id: 3, position: 67},\n    {playerId: \"1\", id: 0, position: 68},\n    {playerId: \"1\", id: 1, position: 69},\n    {playerId: \"1\", id: 2, position: 70},\n    {playerId: \"1\", id: 3, position: 71},\n    {playerId: \"2\", id: 0, position: 72},\n    {playerId: \"2\", id: 1, position: 73},\n    {playerId: \"2\", id: 2, position: 74},\n    {playerId: \"2\", id: 3, position: 75},\n    {playerId: \"3\", id: 0, position: 76},\n    {playerId: \"3\", id: 1, position: 77},\n    {playerId: \"3\", id: 2, position: 78},\n    {playerId: \"3\", id: 3, position: 79},\n  ],\n  players: [\n    {id: \"0\", position: 0, name: \"Player 1\", color: \"red\"},\n    {id: \"1\", position: 1, name: \"Player 2\", color: \"blue\"},\n    {id: \"2\", position: 2, name: \"Player 3\", color: \"yellow\"},\n    {id: \"3\", position: 3, name: \"Player 4\", color: \"green\"},\n  ],\n}\n\n/**\n * Roll the die. If passed a number 1-6, use that as the value,\n * otherwise, use a random die roll.\n */\nfunction rollDie(G: IG, ctx: Ctx, value: number = 0): IG | string {\n  if (typeof G.dieRoll !== \"undefined\") {\n    return INVALID_MOVE;\n  }\n\n  if (value > 6 || value < 0) {\n    return INVALID_MOVE;\n  }\n\n  return {\n    ...G,\n    dieRoll: (value > 0 ? value :  ctx.random?.D6()),\n  }\n}\n\n/**\n * Selector to get the current player instance.\n */\nexport function getCurrentPlayer(G: IG, ctx: Ctx): IPlayer {\n  const player = G.players.find(p => p.id === ctx.currentPlayer);\n  if (player === undefined) {\n    throw Error(\"undefined player\");\n  }\n  return player;\n}\n\n/**\n * Selector to get the current player instance.\n */\nexport function getPlayerById(G: IG, playerId: string): IPlayer {\n  const player = G.players.find(p => p.id === playerId);\n  if (player === undefined) {\n    throw Error(\"undefined player\");\n  }\n  return player;\n}\n\n/**\n * Get a piece instance by id.\n */\nfunction getPieceById(G: IG, ctx: Ctx, pieceId: number): IPiece {\n  const piece = G.pieces.find(p => (\n    p.playerId === ctx.currentPlayer && p.id === pieceId\n  ));\n  if (!piece) {\n    throw new Error(\"Piece not found\")\n  }\n  return piece;\n}\n\n/**\n * Get a list of valid moves from the current game state.\n */\nexport function getValidMoves(G: IG, ctx: Ctx): IPiece[] {\n  return G.pieces.filter(\n    piece => piece.playerId === ctx.currentPlayer\n  ).map(\n    piece => {\n      const pos = getNextPosition(G, ctx, piece);\n      if (piece.position === pos) {\n        return piece;\n      }\n      return {...piece, position: pos}\n    }\n  ).filter(\n    piece => G.pieces.indexOf(piece) === -1\n  );\n}\n\n/**\n * Get the next position for given piece.\n * If the piece doesn't have a valid move, the current position is returned.\n */\nfunction getNextPosition(G: IG, ctx: Ctx, piece: IPiece): number {\n  if (G.dieRoll === undefined) {\n    throw new Error(\"Cannot calculate position from current game state.\")\n  }\n\n  const boardSize = 4;\n  const player = getCurrentPlayer(G, ctx);\n\n  // offset is where the player starts from.\n  const offset = (player.position * 12)\n\n  // Starting positions are indexed after everything else,\n  // so (12 common cells + 4 home cells) * board_size.\n  if (piece.position >= 16 * boardSize) {\n    if (G.dieRoll === 1 || G.dieRoll === 6) {\n      return offset - 1 + G.dieRoll;\n    }\n    return piece.position;\n  }\n\n  const base = 12 * boardSize;\n  const relPos = (base + piece.position - offset) % base;\n  const relDest = relPos + G.dieRoll;\n  if (relDest >= base) {\n    return (player.position * boardSize) + relDest\n  }\n  return (relDest + offset) % base\n}\n\n/**\n * Move the given piece.\n */\nfunction movePiece(G: IG, ctx: Ctx, pieceId: number): IG | string {\n  if (G.dieRoll === undefined) {\n    return INVALID_MOVE;\n  }\n\n  const piece = getPieceById(G, ctx, pieceId);\n  const nextPos = getNextPosition(G, ctx, piece);\n\n  if (!ctx.events || !ctx.events.endTurn) {\n    throw new Error(\"ctx.events is undefined\");\n  }\n\n  // The turn is over unless a 6 was rolled AND a move was made.\n  if (G.dieRoll < 6 || piece.position === nextPos) {\n    if (!ctx.events?.endTurn) {\n      throw new Error(\"ctx.events.endTurn is undefined\")\n    }\n    ctx.events.endTurn();\n  }\n\n  return {\n    ...G,\n    dieRoll: undefined,\n    pieces: G.pieces.map(p => (\n      p === piece  ? {...p, position: nextPos} : p\n    )),\n  }\n}\n\nconst SeisGame: Game<IG> = {\n  name: \"seis\",\n  setup: (): IG => (INITIAL_STATE),\n  moves: {\n    rollDie,\n    movePiece,\n  },\n  turn: {\n  },\n};\n\nexport default SeisGame;\n","import React, {FunctionComponent} from 'react';\n\ninterface Props {\n  color: string,\n  x: number,\n  y: number,\n  h: number,\n  highlight?: boolean,\n}\n\nconst Cell: FunctionComponent<Props> = ({\n  color,\n  x,\n  y,\n  h,\n  highlight,\n  children,\n}) => {\n  const style = {\n    top: x,\n    left: y,\n    height: h,\n    width: h,\n    borderWidth: h * 0.1,\n  }\n  return (\n    <div className={\"Cell \" + color + (highlight ? \" highlight\" : \"\")} style={style}>{children}</div>\n  )\n};\n\nexport default Cell;\n","import React, {FunctionComponent} from 'react';\n\ninterface Props {\n  value?: number,\n  onRoll?: () => void,\n}\n\nconst Dice: FunctionComponent<Props> = ({\n  value,\n  onRoll,\n}) => {\n  const text = value ? String.fromCodePoint(value + 0x267f) : 'roll';\n  const onClick = (e: any) => {\n    if (!value && onRoll) {\n      onRoll();\n    }\n  };\n  return (\n    <div className=\"Dice\" onClick={onClick}>{text}</div>\n  );\n};\n\nexport default Dice;\n","import React, {FunctionComponent} from 'react';\nimport { Ctx } from 'boardgame.io';\nimport { IG, IPlayer, IPiece } from '../game';\n\ninterface Props {\n  G: IG,\n  ctx: Ctx,\n  player: IPlayer,\n  piece: IPiece,\n  enabled?: boolean,\n  onSelect?: (piece: IPiece) => void,\n  onActivate?: (piece: IPiece) => void,\n  onDeactivate?: (piece: IPiece) => void,\n}\n\nconst Piece: FunctionComponent<Props> = ({\n  G,\n  ctx,\n  player,\n  piece,\n  enabled,\n  onSelect,\n  onActivate,\n  onDeactivate,\n}) => {\n  const noop = (p: IPiece) => {return};\n  const onClick = () => { (onSelect || noop)(piece); }\n  const onMouseEnter = () => { (onActivate || noop)(piece); }\n  const onMouseLeave = () => { (onDeactivate || noop)(piece); }\n\n  return (\n    <div\n      className={\"Piece \" + player.color + (enabled ? ' enabled' : '')}\n      onClick={onClick}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n    />\n  )\n}\n\nexport default Piece;\n","import React, { FunctionComponent, useState } from 'react';\nimport { Ctx } from 'boardgame.io';\nimport useWindowSize from '@rehooks/window-size'\n\nimport { BoardLayout4, Colors } from '../constants';\nimport {\n  IG,\n  IPiece,\n  getCurrentPlayer,\n  getPlayerById,\n  getValidMoves,\n} from '../game';\nimport Cell from './Cell';\nimport Dice from './Dice';\nimport Piece from './Piece';\n\ninterface Props {\n  G: IG,\n  ctx: Ctx,\n  moves: any,\n  key: any,\n}\n\n\nconst Board: FunctionComponent<Props> = ({\n  G,\n  ctx,\n  moves,\n}) => {\n  const [activePiece, setActivePiece] = useState<IPiece | undefined>();\n  const {innerHeight, innerWidth} = useWindowSize();\n  const size = Math.min(innerHeight, innerWidth) - 40;\n  /* const size = 410; */\n  const scale = size / 410;\n\n  const currentPlayer = getCurrentPlayer(G, ctx);\n\n  const validMoves: IPiece[] = G.dieRoll ? getValidMoves(G, ctx) : [];\n  const activeMove = validMoves.find(m => activePiece && m.playerId === activePiece.playerId && m.id === activePiece.id);\n\n  const onRoll = () => {\n    moves.rollDie();\n  };\n\n  const selectPiece = (piece: IPiece) => {\n    if (validMoves.find(m => m.playerId === piece.playerId && m.id === piece.id)) {\n      moves.movePiece(piece.id);\n      setActivePiece(undefined);\n    } else {\n      console.log(\"this piece cannot be moved\");\n    }\n  };\n\n  const activatePiece = (piece: IPiece) => {\n    const move = validMoves.find(m => m.playerId === piece.playerId && m.id === piece.id);\n    if (!move) {\n      console.log(\"this piece cannot be activated\");\n    }\n    setActivePiece(piece);\n  };\n\n  const deactivatePiece = (piece: IPiece) => {\n    setActivePiece(undefined);\n  };\n\n  const skip = () => {\n    // TODO: there should probably be a game state move for this.\n    moves.movePiece(0);\n  };\n\n  return (\n    <div className=\"BoardWrapper\">\n      <div className=\"PlayerName1\">Player 1</div>\n      <div className=\"PlayerName2\">Player 2</div>\n      <div className=\"PlayerName3\">Player 3</div>\n      <div className=\"PlayerName4\">Player 4</div>\n      <div className=\"Board\" style={{width: size, height: size}}>\n        <div className={`controls controls-${currentPlayer.position}`}>\n          <Dice value={G.dieRoll} onRoll={onRoll} />\n          {G.dieRoll && validMoves.length === 0 && (\n            <button onClick={skip}>Skip</button>\n          )}\n        </div>\n        {\n          BoardLayout4.cells.map(\n            ([x, y], i) => {\n              const piece = G.pieces.find(({position}) => position === i);\n              const color = (\n                i >= (BoardLayout4.players * 12) ?\n                Colors[Math.floor(i / BoardLayout4.players) % BoardLayout4.players] :\n                ''\n              )\n              return (\n                <Cell\n                  key={i}\n                  x={x * scale}\n                  y={y * scale}\n                  h={20 * scale}\n                  color={color}\n                  highlight={activeMove && activeMove.position === i}\n                  // selected={selected && selected.cell === i}\n                >\n                  {piece && (\n                    <Piece\n                      G={G} ctx={ctx}\n                      player={getPlayerById(G, piece.playerId)}\n                      piece={piece}\n                      onSelect={selectPiece}\n                      onActivate={activatePiece}\n                      onDeactivate={deactivatePiece}\n                      enabled={validMoves.some(p => p.playerId === piece.playerId && p.id === piece.id)}\n                    />\n                  )}\n                </Cell>\n              )\n            }\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Board;\n","import React from 'react';\nimport { Client } from 'boardgame.io/react';\n\nimport './App.css';\nimport Board from './components/Board';\nimport Game from './game';\n\nconst GameClient = Client({\n  game: Game,\n  board: Board,\n});\n\nfunction App() {\n  return (\n    <div>\n      <GameClient debug={true} />\n    </div>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\n//import Board from './Board.js';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}